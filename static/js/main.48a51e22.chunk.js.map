{"version":3,"sources":["components/ToDo/ToDo.js","components/LeftTime/LeftTime.js","backgrounds/star.jpg","backgrounds/scentCandle.jpg","backgrounds/blackTexture.jpg","App.js","reportWebVitals.js","index.js"],"names":["ToDo","props","state","list","handleSubmit","bind","event","preventDefault","items","this","item","target","querySelector","value","setState","concat","classList","contains","parentNode","removeChild","add","todo","flag","className","onSubmit","type","placeholder","map","onClick","handleClick","React","Component","yearToSecond","MAX_LIFE_TIME","date","Date","dayToSecond","monthToSecond","StyledLeftTime","styled","section","StyledTitle","h1","StyledParagraph","p","srOnly","css","StyledInput","input","LeftTime","age","seconds","ageExist","handleAge","handleSeconds","timer","left_time","getMonth","getDate","getHours","getMinutes","getSeconds","setInterval","onChange","imgUrl","img1","img2","img3","App","app","useRef","useEffect","imgSelected","Math","floor","random","current","style","backgroundImage","ref","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.48a51e22.chunk.js","sourcesContent":["import React from 'react';\nimport \"./ToDo.css\";\n\nclass ToDo extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tlist: ['Click when you did it']\n\t\t};\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t}\n\t\n\thandleSubmit(event) {\n\t\tevent.preventDefault();\n\t\tlet items = this.state.list;\n\t\tlet item = event.target.querySelector(\".todo-question\").value;\n\t\t\n\t\tthis.setState({list: items.concat([item])});\n\t\tevent.target.querySelector(\".todo-question\").value = \"\";\n\t}\n\t\n\thandleClick(event) {\n\t\tconst item = event.target\n\t\tif (item.classList.contains(\"checked\"))\n\t\t\titem.parentNode.removeChild(item);\n\t\telse\n\t\t\titem.classList.add(\"checked\");\n\t}\n\n\trender() {\n\t\tconst todo = this.state.list;\n\t\tif (this.props.flag)\n\t\t\treturn (\n\t\t\t\t<div className=\"todo-container\">\n\t\t\t\t\t<form className=\"todo-questions\" onSubmit={this.handleSubmit}>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tclassName=\"todo-question\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tplaceholder=\"What will you do today? Write it in here!\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</form>\n\t\t\t\t\t<ul className=\"todo-list\">\n\t\t\t\t\t\t{todo.map((item) => (<li onClick={this.handleClick} className=\"todo-item\" key={item}>{item}</li>))}\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t);\n\t\telse\n\t\t\treturn null;\n\t}\n}\n\nexport default ToDo;","import React from \"react\";\nimport ToDo from \"../ToDo\";\nimport styled, { css } from 'styled-components';\n\n// calculate left time\nconst yearToSecond = 365 * 24 * 60 * 60;\nconst MAX_LIFE_TIME = 82 * yearToSecond;\nconst date = new Date();\nconst hourToSecond = 60 * 60;\nconst dayToSecond = 24 * hourToSecond;\nconst monthToSecond = [31 * dayToSecond, 28 * dayToSecond, 31 * dayToSecond, 30 * dayToSecond, 31 * dayToSecond, 30 * dayToSecond, 31 * dayToSecond, 31 * dayToSecond, 30 * dayToSecond, 31 * dayToSecond, 30 * dayToSecond, 31 * dayToSecond ];\n\n// style components\nconst StyledLeftTime = styled.section`\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\talign-items: center;\n\theight: 100vh;\n\twidth: 100%;\n`;\n\nconst StyledTitle = styled.h1`\n\tfont-size: 80px;\n\tcolor: white;\n`;\n\nconst StyledParagraph = styled.p`\n\t${props => props.srOnly === true ?\n\t\tcss`\n\t\t\tfont-size: 40px;\n\t\t\tcolor: #899098;\n\t\t`\n\t\t:\n\t\tcss`\n\t\t\tborder: 0 !important;\n\t\t\tclip: rect(1px, 1px, 1px, 1px) !important;\n\t\t\t-webkit-clip-path: inset(50%) !important;\n\t\t\tclip-path: inset(50%) !important;\n\t\t\theight: 1px !important;\n\t\t\tmargin: -1px !important;\n\t\t\toverflow: hidden !important;\n\t\t\tpadding: 0 !important;\n\t\t\tposition: absolute !important;\n\t\t\twidth: 1px !important;\n\t\t\twhite-space: nowrap !important;\n\t\t`\n\t}\n`;\n\nconst StyledInput = styled.input`\n\t${props => props.srOnly === true ?\n\t\tcss`\n\t\t\tborder: 0 !important;\n\t\t\tclip: rect(1px, 1px, 1px, 1px) !important;\n\t\t\t-webkit-clip-path: inset(50%) !important;\n\t\t\tclip-path: inset(50%) !important;\n\t\t\theight: 1px !important;\n\t\t\tmargin: -1px !important;\n\t\t\toverflow: hidden !important;\n\t\t\tpadding: 0 !important;\n\t\t\tposition: absolute !important;\n\t\t\twidth: 1px !important;\n\t\t\twhite-space: nowrap !important;\n\t\t`\n\t\t:\n\t\tcss`\n\t\t\tfont-size: 40px;\n\t\t\ttext-align: center;\n\t\t\t&:focus {\n\t\t\t\tborder-bottom: solid 2x blue;\n\t\t\t}\n\t\t`\n\t}\n`;\n\n// LeftTime component\nclass LeftTime extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tdate: new Date(),\n\t\t\tage: 0,\n\t\t\tseconds: MAX_LIFE_TIME,\n\t\t\tageExist: false\n\t\t};\n\t\tthis.handleAge = this.handleAge.bind(this);\n\t\tthis.handleSeconds = this.handleSeconds.bind(this);\n\t\tthis.timer = this.timer.bind(this);\n\t}\n\t\n\ttimer() {\n\t\tconst {seconds} = this.state;\n\t\tthis.setState({seconds: seconds - 1});\n\t}\n\t\n\thandleSeconds(event) {\n\t\tlet left_time = MAX_LIFE_TIME - ((this.state.age - 1) * yearToSecond + monthToSecond[date.getMonth()] + (date.getDate() - 1) * dayToSecond + (date.getHours() - 1) * hourToSecond + (date.getMinutes() - 1) * 60 + date.getSeconds());\n\t\t\n\t\tevent.preventDefault();\n\t\tthis.setState({seconds: left_time, ageExist: true});\n\t}\n\t\n\thandleAge(event) {\n\t\tthis.setState({age: event.target.value});\n\t}\n\t\n\tcomponentDidMount() {\n\t\tsetInterval(this.timer, 1000);\n\t}\n\t\n\trender() {\n\t\treturn (\n\t\t\t<StyledLeftTime>\n\t\t\t\t<StyledTitle>Your Time is Left for</StyledTitle>\n\t\t\t\t<form onSubmit={this.handleSeconds}>\n\t\t\t\t\t<StyledInput srOnly={this.state.ageExist} onChange={this.handleAge} type=\"text\" placeholder=\"Enter your age\" />\n\t\t\t\t</form>\n\t\t\t\t<StyledParagraph srOnly={this.state.ageExist}>{this.state.seconds} Sec.</StyledParagraph>\n\t\t\t\t<ToDo flag={this.state.ageExist} />\n\t\t\t</StyledLeftTime>\n\t\t);\n\t}\n}\n\nexport default LeftTime;","export default __webpack_public_path__ + \"static/media/star.e2bcca17.jpg\";","export default __webpack_public_path__ + \"static/media/scentCandle.afb45a9b.jpg\";","export default __webpack_public_path__ + \"static/media/blackTexture.05cb44d5.jpg\";","import React, { useRef, useEffect } from 'react';\nimport LeftTime from './components/LeftTime';\nimport img1 from './backgrounds/star.jpg';\nimport img2 from './backgrounds/scentCandle.jpg';\nimport img3 from './backgrounds/blackTexture.jpg';\nimport './App.css';\n\nconst imgUrl = [img1, img2, img3];\n\nfunction App() {\n\tconst app = useRef();\n\tuseEffect(() => {\n\t\tlet imgSelected = imgUrl[Math.floor(Math.random() * 3) + 0];\n\t\tapp.current.style.backgroundImage = 'url(' + imgSelected + ')';\n\t});\n\treturn (\n\t\t<div className=\"App\" ref={app}>\n\t\t\t<LeftTime />\n\t\t</div>\n\t);\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}